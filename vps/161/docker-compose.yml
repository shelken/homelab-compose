services:
  mosdns:
    image: ghcr.io/shelken/mosdns:vps-latest
    container_name: mosdns
    networks:
      - homelab
    restart: always
    labels:
      - homepage.group=网络
      - homepage.name=mosdns
      - homepage.icon=azure-dns.png
      # - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:5533
      - homepage.description=dns服务
    environment:
      TZ: Asia/Shanghai
      REMOTE_DNS_SERVER_1: ${REMOTE_DNS_SERVER_1}
      REMOTE_DNS_SERVER_2: ${REMOTE_DNS_SERVER_2}
    ports:
      - "5054:53"
      - "5054:53/udp"
      # - "8338:8338/tcp"
    deploy:
      replicas: 1
    logging:
      options:
        max-size: "80m"
        max-file: "3"
  caddy:
    image: ghcr.io/caddybuilds/caddy-cloudflare:2.10
    container_name: caddy
    networks:
      - homelab
    restart: always
    labels:
      - homepage.group=网络
      - homepage.name=vps-161-caddy
      - homepage.icon=caddy.png
      - homepage.href=https://${MAIN_DOMAIN:-www.google.com}
      - homepage.description=vps-161反向代理
    environment:
      TZ: Asia/Shanghai
      MAIN_DOMAIN: ${MAIN_DOMAIN}
      CLOUDFLARE_API_TOKEN: ${CADDY_CLOUDFLARE_API_TOKEN}
    volumes:
      - "${CADDY_CONFIG_FILE}:/etc/caddy/Caddyfile"
      - "${CADDY_SITE_DIR}:/srv"
      - "${CADDY_DATA_DIR}:/data"
      - "${CADDY_CONFIG_DIR}:/config"
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
      - "${DEPLOY_HOST}:2019:2019/tcp"
    deploy:
      replicas: 1
  dhp:
    image: registry:2.8.3
    container_name: dhp
    volumes:
      # 挂载数据目录 (可选)
      # - ./mirror:/var/lib/registry
      # 配置时区 (可选)
      - /etc/localtime:/etc/localtime:ro
      - "${DATA_BASE_DIR}/dhp/data:/var/lib/registry"
      - "../../apps/mirror/config.yaml:/etc/docker/registry/config.yml"
    # ports:
    #   - 5000:5000
    environment:
      - REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io
    networks:
      - homelab
    restart: always
    deploy:
      replicas: 1
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest@sha256:9e4b9e7517a6b660f2cc903a19b257b1852d5b3344794e3ea334ff00ae677ac2
    container_name: dockerproxy
    restart: always
    networks:
      - homelab
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=1 # Disallow any POST operations (effectively read-only)
      - VOLUMES=1
      - IMAGES=1
      - INFO=1
      - NETWORKS=1
    ports:
      - "${DOCKER_PROXY_HOST:-127.0.0.1}:2575:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    deploy:
      replicas: 1
  sub-converter:
    image: shelken/subconverter:latest
    container_name: sub-converter
    networks:
      - homelab
    restart: always
    labels:
      - homepage.group=网络
      - homepage.name=订阅转换
      - homepage.icon=docker-moby.png
      - homepage.href=https://${SUB_CONVERTER_DOMAIN:-www.google.com}
      - homepage.description=订阅转换
    environment:
      TZ: Asia/Shanghai
      MANAGED_PREFIX: https://${SUB_CONVERTER_DOMAIN:-www.google.com}
      API_MODE: false
      API_TOKEN: password
    # volumes:
    #   - "${DATA_DIR}:/base/profiles"
    # ports:
    #   - '6688:25500'
    deploy:
      replicas: 1
  derp:
    image: fredliang/derper:v1.88.3
    container_name: derp
    # networks:
    #   - homelab
    network_mode: host
    restart: always
    labels:
      - homepage.group=网络
      - homepage.name=derp服务
      - homepage.icon=tailscale.png
      - homepage.href=https://${DERP_DOMAIN}
      - homepage.description=derp服务
    environment:
      TZ: Asia/Shanghai
      DERP_DOMAIN: ${DERP_DOMAIN}
      DERP_ADDR: ":8666"
      DERP_STUN_PORT: "3478"
      DERP_VERIFY_CLIENTS: "false"
    volumes:
      - "/var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock"
    # ports:
    #   - 3478:3478/udp
    deploy:
      replicas: 1
  # headscale:
  #   image: headscale/headscale:0.26
  #   container_name: headscale
  #   networks:
  #     - homelab
  #   restart: always
  #   command: serve
  #   labels:
  #     - homepage.group=网络
  #     - homepage.name=headscale
  #     - homepage.icon=tailscale.png
  #     - homepage.href=https://${HEADSCALE_DOMAIN}
  #     - homepage.description=headscale
  #   environment:
  #     TZ: Asia/Shanghai
  #   volumes:
  #     - "${HEADSCALE_CONFIG_DIR}:/etc/headscale/"
  #   ports:
  #     - '127.0.0.1:9090:9090'
  #     - '127.0.0.1:8080:8080'
  #   deploy:
  #     replicas: 0
  # headplane:
  #   # I recommend you pin the version to a specific release
  #   image: ghcr.io/tale/headplane:0.6.0
  #   container_name: headplane
  #   restart: always
  #   networks:
  #     - homelab
  #   # ports:
  #   #   - '3000:3000'
  #   volumes:
  #     - '${HEADPLANE_CONFIG_DIR}/config.yaml:/etc/headplane/config.yaml'
  #     # This should match headscale.config_path in your config.yaml
  #     - '${HEADSCALE_CONFIG_DIR}/config.yaml:/etc/headscale/config.yaml'

  #     # Headplane stores its data in this directory
  #     - '${HEADPLANE_DATA_DIR}:/var/lib/headplane'

  #     # If you are using the Docker integration, mount the Docker socket
  #     - '/var/run/docker.sock:/var/run/docker.sock:ro'
  #   deploy:
  #     replicas: 0
  # lobe-chat:
  #   image: lobehub/lobe-chat
  #   container_name: lobe-chat
  #   networks:
  #     - homelab
  #   restart: always
  #   labels:
  #     - homepage.group=AI
  #     - homepage.name=lobe-chat
  #     - homepage.icon=https://cdn.jsdelivr.net/gh/ChatGPTNextWeb/ChatGPT-Next-Web@main/docs/images/icon.svg
  #     - homepage.href=https://${LOBE_CHAT_DOMAIN}
  #     - homepage.description=lobe-chat
  #   environment:
  #     TZ: Asia/Shanghai
  #     ACCESS_CODE: "${CNW_CODE}" # 使用的code
  #     OPENAI_PROXY_URL: ${OPENAI_API_BASE_URL}/v1 # cloudflare 代理地址
  #     OPENAI_API_KEY: ${OPENAI_API_KEY:-sk} # openai api key
  #     GOOGLE_API_KEY: ${GEMINI_API_KEY:-key}
  #   # ports:
  #   #   - '3026:3210'
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: watchtower
  #   networks:
  #     - homelab
  #   restart: always
  #   command: '-c --interval ${WATCHTOWER_INTERVAL} --label-enable --cleanup'
  #   labels:
  #     - homepage.group=容器更新
  #     - homepage.name=${WATCHTOWER_SLACK_IDENTIFIER}
  #     - homepage.icon=watchtower.png
  #     - homepage.description=watchtower
  #   environment:
  #     TZ: Asia/Shanghai
  #     WATCHTOWER_NOTIFICATIONS: slack
  #     WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${WATCHTOWER_SLACK_HOOK_URL}
  #     WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: ${WATCHTOWER_SLACK_IDENTIFIER}
  #     WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: ${WATCHTOWER_SLACK_CHANNEL}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  # wg-easy:
  #   image: ghcr.io/wg-easy/wg-easy:14
  #   container_name: wg-easy
  #   networks:
  #     - homelab
  #   cap_add:
  #     - NET_ADMIN
  #     - SYS_MODULE
  #     - NET_RAW
  #   sysctls:
  #     - net.ipv4.ip_forward=1
  #     - net.ipv4.conf.all.src_valid_mark=1
  #   restart: always
  #   labels:
  #     - homepage.group=网络
  #     - homepage.name=wg-easy
  #     - homepage.icon=wireguard.png
  #     - homepage.description=wg-easy
  #   environment:
  #     # Change Language:
  #     # (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi)
  #     - LANG=chs
  #     # ⚠️ Required:
  #     # Change this to your host's public address
  #     - WG_HOST=${WG_HOST}

  #     # Optional:
  #     - PASSWORD_HASH=${WG_PASSWORD_HASH} # Hash of the password to use for authentication
  #     # - PORT=51821
  #     # - WG_PORT=51820
  #     # - WG_CONFIG_PORT=92820
  #     - WG_DEFAULT_ADDRESS=10.8.0.x
  #     # - WG_DEFAULT_DNS=1.1.1.1
  #     # - WG_MTU=1420
  #     - WG_ALLOWED_IPS=10.8.0.0/24, 192.168.0.0/24, 192.168.6.0/24
  #     # - WG_PERSISTENT_KEEPALIVE=25
  #     # - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
  #     # - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
  #     # - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
  #     # - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt
  #     # - UI_TRAFFIC_STATS=true
  #     # - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)
  #   volumes:
  #     - ${WG_DATA_DIR}:/etc/wireguard
  #   ports:
  #     - "51820:51820/udp"
  #     # - "127.0.0.1:51821:51821/tcp"
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  # headscale-webui:
  #   image: ghcr.io/ifargle/headscale-webui:latest
  #   container_name: headscale-webui
  #   depends_on:
  #     - headscale
  #   networks:
  #     - homelab
  #   restart: always
  #   labels:
  #     - homepage.group=网络
  #     - homepage.name=headscale-webui
  #     - homepage.icon=headscale.png
  #     - homepage.href=${HEADSCALE_ADMIN_DOMAIN}
  #     - homepage.description=headscale-webui
  #   environment:
  #     TZ: Asia/Shanghai
  #     COLOR: light-blue
  #     HS_SERVER: http://headscale:8080
  #     DOMAIN_NAME: http://headscale-webui:5000
  #     SCRIPT_NAME: /admin
  #     AUTH_TYPE:
  #     LOG_LEVEL: info
  #   env_file:
  #     - ./headscale-ui.env
  #   volumes:
  #     - "${HEADSCALE_UI_DATA_DIR}:/data"
  #     - "${HEADSCALE_CONFIG_DIR}:/etc/headscale/:ro"
  #   ports:
  #     - '127.0.0.1:8083:5000'
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3

networks:
  homelab:
    driver: bridge
