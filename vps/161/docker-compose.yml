version: "3.8"
services:
  caddy:
    image: ghcr.io/shelken/caddy:latest
    container_name: caddy
    networks:
      - homelab
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - homepage.group=网络
      - homepage.name=vps-161-caddy
      - homepage.icon=caddy.png
      - homepage.href=https://${MAIN_DOMAIN:-www.google.com}
      - homepage.description=vps-161反向代理
    environment:
      TZ: Asia/Shanghai
      MAIN_DOMAIN: ${MAIN_DOMAIN}
      CLOUDFLARE_API_TOKEN: ${CADDY_CLOUDFLARE_API_TOKEN}
    volumes:
      - "${CADDY_CONFIG_FILE}:/etc/caddy/Caddyfile"
      - "${CADDY_SITE_DIR}:/srv"
      - "${CADDY_DATA_DIR}:/data"
      - "${CADDY_CONFIG_DIR}:/config"
    ports:
      - '127.0.0.1:80:80'
      - '443:443/udp'
      - '443:443'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    restart: unless-stopped
    networks:
      - homelab
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=0 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=0 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - "${DOCKER_PROXY_HOST:-127.0.0.1}:2575:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  sub-converter:
    image: shelken/subconverter:latest
    container_name: sub-converter
    networks:
      - homelab
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=网络
      - homepage.name=订阅转换
      - homepage.icon=docker-moby.png
      - homepage.href=https://${SUB_CONVERTER_DOMAIN:-www.google.com}
      - homepage.description=订阅转换
    environment:
      TZ: Asia/Shanghai
      MANAGED_PREFIX: https://${SUB_CONVERTER_DOMAIN:-www.google.com}
      API_MODE: false
      API_TOKEN: password
    # volumes:
    #   - "${DATA_DIR}:/base/profiles"
    # ports:
    #   - '6688:25500'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  derp:
    image: fredliang/derper
    container_name: derp
    networks:
      - homelab
    # network_mode: host
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=网络
      - homepage.name=derp服务
      - homepage.icon=tailscale.png
      - homepage.href=https://${DERP_DOMAIN}
      - homepage.description=derp服务
    environment:
      TZ: Asia/Shanghai
      DERP_DOMAIN: ${DERP_DOMAIN}
      DERP_ADDR: ":8666"
      DERP_VERIFY_CLIENTS: "true"
    volumes:
      - "/var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock"
    ports:
     #- 127.0.0.1:8680:80
      - 3478:3478/udp
     #- 127.0.0.1:8666:8666
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  headscale:
    image: headscale/headscale:0.22
    container_name: headscale
    networks:
      - homelab
    restart: unless-stopped
    command: headscale serve
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - homepage.group=网络
      - homepage.name=headscale
      - homepage.icon=tailscale.png
      - homepage.href=https://${HEADSCALE_DOMAIN}
      - homepage.description=headscale
    environment:
      TZ: Asia/Shanghai
    volumes:
      - "${HEADSCALE_CONFIG_DIR}:/etc/headscale/"
    ports:
      - '127.0.0.1:9090:9090'
      - '127.0.0.1:8080:8080'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  lobe-chat:
    image: lobehub/lobe-chat
    container_name: lobe-chat
    networks:
      - homelab
    restart: unless-stopped
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - homepage.group=AI
      - homepage.name=lobe-chat
      - homepage.icon=https://cdn.jsdelivr.net/gh/ChatGPTNextWeb/ChatGPT-Next-Web@main/docs/images/icon.svg
      - homepage.href=https://${LOBE_CHAT_DOMAIN}
      - homepage.description=lobe-chat
    environment:
      TZ: Asia/Shanghai
      ACCESS_CODE: "${CNW_CODE}" # 使用的code
      OPENAI_PROXY_URL: ${OPENAI_API_BASE_URL}/v1 # cloudflare 代理地址
      OPENAI_API_KEY: ${OPENAI_API_KEY:-sk} # openai api key
      GOOGLE_API_KEY: ${GEMINI_API_KEY:-key}
    # ports:
    #   - '3026:3210'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    networks:
      - homelab
    restart: unless-stopped
    command: '-c --interval ${WATCHTOWER_INTERVAL} --label-enable --cleanup'
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=容器更新
      - homepage.name=${WATCHTOWER_SLACK_IDENTIFIER}
      - homepage.icon=watchtower.png
      - homepage.description=watchtower
    environment:
      TZ: Asia/Shanghai
      WATCHTOWER_NOTIFICATIONS: slack
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${WATCHTOWER_SLACK_HOOK_URL}
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: ${WATCHTOWER_SLACK_IDENTIFIER}
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: ${WATCHTOWER_SLACK_CHANNEL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 1
  # headscale-webui:
  #   image: ghcr.io/ifargle/headscale-webui:latest
  #   container_name: headscale-webui
  #   depends_on:
  #     - headscale
  #   networks:
  #     - homelab
  #   restart: unless-stopped
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true
  #     - homepage.group=网络
  #     - homepage.name=headscale-webui
  #     - homepage.icon=headscale.png
  #     - homepage.href=${HEADSCALE_ADMIN_DOMAIN}
  #     - homepage.description=headscale-webui
  #   environment:
  #     TZ: Asia/Shanghai
  #     COLOR: light-blue
  #     HS_SERVER: http://headscale:8080
  #     DOMAIN_NAME: http://headscale-webui:5000
  #     SCRIPT_NAME: /admin
  #     AUTH_TYPE: 
  #     LOG_LEVEL: info
  #   env_file:
  #     - ./headscale-ui.env
  #   volumes:
  #     - "${HEADSCALE_UI_DATA_DIR}:/data"
  #     - "${HEADSCALE_CONFIG_DIR}:/etc/headscale/:ro"
  #   ports:
  #     - '127.0.0.1:8083:5000'
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 1

networks:
  homelab:
    driver: bridge
