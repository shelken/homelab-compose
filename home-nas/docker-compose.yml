version: "3.8"

networks:
  homelab:
    driver: bridge

services:
  alist3:
    image: "xhofe/alist:latest"
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=媒体管理
      - homepage.name=家里云盘
      - homepage.icon=https://cdn.jsdelivr.net/gh/alist-org/logo@main/logo.svg
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:5245
      - homepage.description=home-alist3
    container_name: alist3
    networks:
      - homelab
    volumes:
      - "${ALIST3_DATA_DIR}:/opt/alist/data"
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "5245:5244"
      - "5246:5246"
    restart: always
    deploy:
      replicas: 0
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  ani-rss:
    image: wushuo894/ani-rss
    container_name: ani-rss
    networks:
      - homelab
    dns:
      - 223.5.5.5
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - homepage.group=媒体管理
      - homepage.name=ani-rss
      - homepage.icon=https://docs.wushuo.top/image/mikan-pic.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:7789
      - homepage.instance.public.href=https://ani-rss.${HOME_DOMAIN}
      - homepage.description=追番
    environment:
      TZ: Asia/Shanghai
      UMASK: 022
      PUID: ${SHELKEN_PUID}
      PGID: ${SHELKEN_PGID}
      CONFIG: /config
    volumes:
      - "${ANI_RSS_CONFIG_DIR}:/config"
      - "${ANIME_VIDEO_DIR}:/media/anime"
    ports:
      - "7789:7789"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  # AutoBangumi:
  #   image: estrellaxd/auto_bangumi:3.1.13
  #   container_name: AutoBangumi
  #   networks:
  #     - homelab
  #   dns:
  #     - 223.5.5.5
  #   restart: always
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=false
  #     - homepage.group=媒体管理
  #     - homepage.name=AutoBangumi
  #     - homepage.icon=https://gcore.jsdelivr.net/gh/EstrellaXD/Auto_Bangumi@main/webui/public/images/logo.svg
  #     - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:7892
  #     - homepage.instance.public.href=https://atbg.${HOME_DOMAIN}
  #     - homepage.description=追番
  #   environment:
  #     TZ: Asia/Shanghai
  #     UMASK: 022
  #     PUID: ${SHELKEN_PUID}
  #     PGID: ${SHELKEN_PGID}
  #   volumes:
  #     - "${AUTO_BANGUMI_CONFIG_DIR}:/app/config"
  #     - "${AUTO_BANGUMI_DATA_DIR}:/app/data"
  #   ports:
  #     - "7892:7892"
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  # chinesesubfinder:
  #   image: allanpk716/chinesesubfinder:v0.46.3
  #   container_name: chinesesubfinder
  #   networks:
  #     - homelab
  #   restart: always
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=false
  #     - homepage.group=未分类
  #     - homepage.name=字幕搜索
  #     - homepage.icon=https://cdn.jsdelivr.net/gh/ChineseSubFinder/ChineseSubFinder@master/logo/logo.PNG
  #     - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:19035
  #     - homepage.description=字幕搜索
  #   environment:
  #     TZ: Asia/Shanghai
  #     PUID: ${SHELKEN_PUID}
  #     PGID: ${SHELKEN_PGID}
  #     PERMS: "true"
  #   volumes:
  #     - "${CSF_CONFIG}:/config" # 冒号左边请修改为你想在主机上保存配置、日志等文件的路径"
  #     - "${V1_VIDEO}:/media"
  #     # - /volume1/Video/Movies:/media/电影
  #     # "- /volume1/Video/TVShows:/media/连续剧    # 请修改为你"的媒体目录，冒号右边可以改成你方便记忆的目录，多个媒体目录需要分别映射进来
  #     - "${CSF_BROWSER}:/root/.cache/rod/browser" # 容器重启后无需再次下载 chrome，除非 go-rod 更新
  #   ports:
  #     - "19035:19035"
  #   deploy:
  #     replicas: 1
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  clash:
    image: dreamacro/clash:latest
    container_name: clash
    networks:
      - homelab
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=网络
      - homepage.name=clash-nas-core
      - homepage.icon=clash.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:7080
      - homepage.description=clash运行
    environment:
      TZ: Asia/Shanghai
    volumes:
      - "${CLASH_CONFIG_MIAONA}:/root/.config/clash/config.yaml"
    ports:
      - "7890:7890"
      - "7891:7891"
      - "9090:9090"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  # ct:
  #   image: cloudflare/cloudflared:latest
  #   container_name: ct
  #   networks:
  #     - homelab
  #   restart: always
  #   command: "tunnel --no-autoupdate run --token ${CT_TOKEN} --protocol http2"
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true
  #     - homepage.group=网络
  #     - homepage.name=Cloudflare Tunnel NAS
  #     - homepage.icon=cloudflare-zero-trust.png
  #     - homepage.href=https://one.dash.cloudflare.com
  #     - homepage.description=cloudflare-tunnel-home
  #   environment:
  #     TZ: Asia/Shanghai
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  # ddns:
  #   image: ghcr.io/zebradil/cloudflare-dynamic-dns:4.0.2
  #   container_name: ddns
  #   network_mode: host
  #   restart: always
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=false
  #     - homepage.group=网络
  #     - homepage.name=ddns
  #     - homepage.icon=docker-moby.png
  #     - homepage.href=https://dash.cloudflare.com
  #     - homepage.description=ddns-nas
  #   environment:
  #     TZ: Asia/Shanghai
  #     CFDDNS_IFACE: eth0
  #     CFDDNS_TOKEN: ${DDNS_CF_TOKEN}
  #     CFDDNS_DOMAINS: ${DDNS_DOMAINS}
  #     CFDDNS_LOG_LEVEL: info
  #     CFDDNS_PRIORITY_SUBNETS: ${DDNS_PRIORITY_SUBNETS}
  #     CFDDNS_RUN_EVERY: 10m
  #     CFDDNS_MULTIHOST: ${DDNS_MULTIHOST:-false}
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    restart: always
    networks:
      - homelab
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=0 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=0 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - "${DOCKER_PROXY_HOST:-127.0.0.1}:2575:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  home-assistant:
    image: homeassistant/home-assistant:stable
    container_name: home-assistant
    network_mode: host
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=智能家居
      - homepage.name=Home-HASS
      - homepage.icon=home-assistant-alt.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:8123
      - homepage.instance.public.href=https://hass-home.${HOME_DOMAIN}
      - homepage.description=home-assistant
    environment:
      TZ: Asia/Shanghai
      HTTPS_PROXY: http://127.0.0.1:7890
    volumes:
      - "${HASS_CONFIG_DIR}:/config"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          memory: 1G
  # melody:
  #   image: foamzou/melody:latest
  #   container_name: melody
  #   networks:
  #     - homelab
  #   restart: always
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true
  #     - homepage.group=未分类
  #     - homepage.name=国内音乐搜索
  #     - homepage.icon=https://cdn.jsdelivr.net/gh/foamzou/melody@main/imgs/melody.png
  #     - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:5566
  #     - homepage.description=音乐搜索
  #   environment:
  #     TZ: Asia/Shanghai
  #   volumes:
  #     - "${MELODY_CONFIG_PROFILE_DIR}:/app/backend/.profile"
  #   ports:
  #     - "5566:5566"
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  # navidrome:
  #   # image: deluan/navidrome:0.49.0
  #   image: deluan/navidrome:latest
  #   container_name: navidrome
  #   user: "${SHELKEN_PUID}:${SHELKEN_PGID}"
  #   networks:
  #     - homelab
  #   restart: always
  #   labels:
  #     - com.centurylinklabs.watchtower.enable=true
  #     - homepage.group=媒体
  #     - homepage.name=Navidrome
  #     - homepage.icon=navidrome.png
  #     - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:4533
  #     - homepage.description=备用音乐库
  #     - homepage.widget.type=navidrome
  #     - homepage.widget.url=http://${DEPLOY_HOST:-127.0.0.1}:4533
  #     - homepage.widget.user=shelken
  #     - homepage.widget.salt=${NAVIDROME_SALT}
  #     - homepage.widget.token=${NAVIDROME_TOKEN}
  #   environment:
  #     TZ: Asia/Shanghai
  #     ND_LASTFM_SECRET: "${LASTFM_SECRET}"
  #     ND_LASTFM_APIKEY: "${LASTFM_APIKEY}"
  #     ND_LASTFM_ENABLED: "true"
  #   volumes:
  #     - "${NAVIDROME_DATA_DIR}:/data"
  #     - "${SELF_MAIN_MUSIC}:/music:ro"
  #   ports:
  #     - "4533:4533"
  #   deploy:
  #     replicas: 0
  #     update_config:
  #       parallelism: 1
  #       delay: 3s
  #       order: stop-first
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 3
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=媒体
      - homepage.name=Plex
      - homepage.icon=plex.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:32400/web/index.html
      - homepage.instance.public.href=https://plex.${HOME_DOMAIN}
      - homepage.description=主音乐库
    environment:
      TZ: Asia/Shanghai
      VERSION: latest
      PUID: 1034
      PGID: 100
    volumes:
      - "${PLEX_CONFIG_DIR}:/config"
      - "${SELF_MAIN_MUSIC}:/volume1/Music/music:ro"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:amd64-latest
    container_name: qbittorrent
    networks:
      - homelab
    restart: always
    labels:
      #   - com.centurylinklabs.watchtower.enable=true
      - homepage.group=媒体管理
      - homepage.name=qBittorrent
      - homepage.icon=qbittorrent.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:8086
      - homepage.instance.public.href=https://qbit.${HOME_DOMAIN}
      - homepage.description=下载文件
      - homepage.widget.type=qbittorrent
      - homepage.widget.url=http://${DEPLOY_HOST:-127.0.0.1}:8086
      - homepage.widget.fields=["leech", "download", "seed", "upload"]
      - homepage.widget.username=${QB_USERNAME}
      - homepage.widget.password=${QB_PASSWORD}
    environment:
      TZ: Asia/Shanghai
      PUID: ${SHELKEN_PUID}
      PGID: ${SHELKEN_PGID}
      WEBUI_PORT: 8080
    volumes:
      - "${QB_CONFIG_DIR}:/config"
      - "${V1_VIDEO_WATCH}:/downloads/watch"
      - "${V1_VIDEO_MOVIE_WATCH}:/downloads/MovieWatch"
      - "${QB_DOWNLOADS_DIR}:/downloads/qb"
      - "${QB_UI_DIR}:/ui"
      - "${QB_SCRIPT_DIR}:/script"
      - "${ANIME_VIDEO_DIR}:/media/anime"
    ports:
      - "8086:8080"
      - "6881:6881"
      - "6881:6881/udp"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  resilio-sync:
    image: lscr.io/linuxserver/resilio-sync:latest
    container_name: resilio-sync
    networks:
      - homelab
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=文件同步
      - homepage.name=resilio-sync-nas
      - homepage.icon=resiliosync.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:8888/gui
      - homepage.description=nas-reilio-sync
    environment:
      TZ: Asia/Shanghai
      PUID: ${SHELKEN_PUID}
      PGID: ${SHELKEN_PGID}
    volumes:
      - "${RSL_SYNC_CONFIG_DIR}:/config"
      - "${RSL_SYNC_DOWNLOADS_DIR}:/downloads"
      - "${SELF_MAIN_MUSIC}:/sync/music"
      - "${V1_VIDEO_BEATSABER}:/sync/Video/BeatSaber"
    ports:
      - "8888:8888"
      - "55555:55555"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  restic-server:
    image: restic/rest-server:0.13.0
    container_name: restic-server
    networks:
      - homelab
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - homepage.group=文件同步
      - homepage.name=restic-server-nas
      - homepage.icon=docker-moby.png
      # - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:8888
      - homepage.description=nas-restic-server
    environment:
      TZ: Asia/Shanghai
    volumes:
      - "${RESTIC_SERVER_DATA_DIR}:/data"
    ports:
      - "5376:8000"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  scrypted:
    image: koush/scrypted
    container_name: scrypted
    network_mode: host
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=智能家居
      - homepage.name=scrypted-home
      - homepage.icon=scrypted.png
      - homepage.href=https://${DEPLOY_HOST:-127.0.0.1}:10443
      - homepage.description=scrypted home
    environment:
      TZ: Asia/Shanghai
      SCRYPTED_WEBHOOK_UPDATE: http://localhost:10444/v1/update
      SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION: Bearer SET_THIS_TO_SOME_RANDOM_TEXT
    volumes:
      - "${SCRYPTED_DATA_DIR}:/server/volume"
    # ports:
    #   - '80:80'
    deploy:
      replicas: 0
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        reservations:
          memory: "1024m"
        limits:
          memory: "1024m"
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    networks:
      - homelab
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=文件同步
      - homepage.name=syncthing-nas
      - homepage.icon=syncthing.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:8384
      - homepage.description=nas
    environment:
      TZ: Asia/Shanghai
      PUID: 0
      PGID: 0
    volumes:
      - "${SYNCTHING_CONFIG}:/config"
      - "${DOCKER_DATA_DIR}:/syncthing-nas/volume1/docker"
    ports:
      - "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
      - "21027:21027/udp"
    deploy:
      replicas: 0
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  tachidesk:
    image: ghcr.io/suwayomi/tachidesk:v0.7.0
    container_name: tachidesk
    networks:
      - homelab
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=false
      - homepage.group=书籍
      - homepage.name=漫画
      - homepage.icon=https://gcore.jsdelivr.net/gh/Suwayomi/Suwayomi-Server@master/server/src/main/resources/icon/faviconlogo.ico
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:4567
      - homepage.description=Tachidesk
    environment:
      TZ: Asia/Shanghai
    volumes:
      - "${TACHIDESK_DATA_DIR}:/home/suwayomi/.local/share/Tachidesk"
    ports:
      - "4567:4567"
    deploy:
      replicas: 0
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          memory: 1G
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    networks:
      - homelab
    restart: always
    command: "-c --interval ${WATCHTOWER_INTERVAL} --label-enable --cleanup"
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=容器更新
      - homepage.name=watchtower-nas
      - homepage.icon=watchtower.png
      - homepage.description=watchtower
    environment:
      TZ: Asia/Shanghai
      WATCHTOWER_NOTIFICATIONS: slack
      WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${WATCHTOWER_SLACK_HOOK_URL}
      WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: ${WATCHTOWER_SLACK_IDENTIFIER}
      WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: ${WATCHTOWER_SLACK_CHANNEL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
  yacd:
    image: haishanh/yacd:master
    container_name: yacd
    networks:
      - homelab
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=网络
      - homepage.name=NAS代理
      - homepage.icon=clash.png
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:7080/#/proxies
      - homepage.description=clash-ui
    environment:
      TZ: Asia/Shanghai
      YACD_DEFAULT_BACKEND: ${NAS_CLASH_API}
    ports:
      - "7080:80"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 3s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
