networks:
  homelab:
    driver: bridge

# secrets:
#   ct-token:
#     environment: CT_TOKEN
#   dufs-password:
#     environment: DUFS_PASSWORD

services:
  blinko:
    image: "blinkospace/blinko:latest"
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - homepage.group=文章
      - homepage.name=blinko
      - homepage.icon=https://cdn.jsdelivr.net/gh/alist-org/logo@main/logo.svg
      - homepage.href=http://${DEPLOY_HOST:-127.0.0.1}:5230
      - homepage.instance.public.href=https://blinko.${HOME_DOMAIN}
      - homepage.description=笔记替代
      - "traefik.http.routers.blinko.service=blinko"
      - "traefik.http.routers.blinko.rule=Host(`blinko.${HOME_DOMAIN}`)"
      - "traefik.enable=true"
      - "traefik.http.routers.blinko.entrypoints=https"
      - "traefik.http.routers.blinko.tls=true"
      - "traefik.http.routers.blinko.tls.certresolver=myresolver"
      - "traefik.http.routers.blinko.tls.domains[0].main=${HOME_DOMAIN}"
      - "traefik.http.routers.blinko.tls.domains[0].sans=*.${HOME_DOMAIN}"
    container_name: blinko
    networks:
      - homelab
    depends_on:
      blinko-postgres:
        condition: service_healthy
    environment:
      TZ: Asia/Shanghai
      NODE_ENV: production
      # NEXTAUTH_URL: http://localhost:1111
      # NEXT_PUBLIC_BASE_URL: http://localhost:1111
      NEXTAUTH_SECRET: my_ultra_secure_nextauth_secret
      DATABASE_URL: postgresql://postgres:${BLINKO_POSTGRES_PASSWORD}@blinko-postgres:5432/postgres
    ports:
      - "5230:1111"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://blinko:1111/"]
      interval: 30s 
      timeout: 10s   
      retries: 5     
      start_period: 30s 
  blinko-postgres:
    image: postgres:14
    container_name: blinko-postgres
    restart: unless-stopped
    # ports:
    #   - 5435:5432
    networks:
      - homelab
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${BLINKO_POSTGRES_PASSWORD}
      TZ: Asia/Shanghai
    # Persisting container data
    # Make sure you have enough permissions.
    volumes:
      - "${BLINKO_DATA_DIR}:/var/lib/postgresql/data"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
